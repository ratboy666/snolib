<h1>COOKIE - COOKIE Support Functions</h1>

Cookie support functions. Cookies are saved in a cookie jar, which is
a table. In turn, each cookie has a value, and may have attributes
(cookie and attributes are “crumbs”). The cookie is itself stored as a
table.

Thus a cookie jar resembles an SQL table.

Browsers support 5 crumbs: Expires, Path, Secure, HttpOnly and the
default (value) crumb. Some browsers may support Max-Age.

[[RFC2965]] (and [[RFC2616]]) indicates that attribute names are
case in-sensitive. Space may be added between tokens. [[Max-Age=0]]
effectively ends a session.

Set-Cookie2:
Comment= CommentURL= Discard Domain= Max-Age= Path= Port=".." Secure
Version=1

Cache-control: no-cache="set-cookie2"
Cache-control: private

Cookie: $Version = v ;|,... name=value; $Path= v; $Domain= v; $Port="..."
Names beginning with $ are attributes

Names and values should be in the character set !..~. ',' and ';'
are not allowed. '=' is not allowed in a name.

Attributes are not returned when the cookie is returned from the
browser.

[[COOKIE_EXPIRY(N)]] returns the expiry string for [[N]] seconds in
the future. [[COOKIE_STRING(JAR)]] returns a string with all cookie
definitions ready to be sent to the browser. There is no attempt to
restrict attributes or characters used. That is left to the caller.
If a cookie with a bad name is crafted by the browser, it will simply
be returned (probably as a session cookie).

<h2>Uses</h2>
<a href="CHARS.html">CHARS</a><br>
<a href="DEXP.html">DEXP</a><br>
<a href="HASH.html">HASH</a><br>
<a href="TIME.html">TIME</a><br>
<a href="TRIMB.html">TRIMB</a><br>
<a href="VDIFFER.html">VDIFFER</a><br>

<<INCLUDES>>=
-INCLUDE 'CHARS.INC'
-INCLUDE 'DEXP.INC'
-INCLUDE 'HASH.INC'
-INCLUDE 'TIME.INC'
-INCLUDE 'TRIMB.INC'
-INCLUDE 'VDIFFER.INC'
@

<<COOKIE>>=
-MODULE COOKIE
-PUBLIC NEW_COOKIE_JAR(), NEW_COOKIE(), COOKIE_SET_VALUE()
-PUBLIC COOKIE_VALUE(), COOKIE_SET_CRUMB(), COOKIE_GET_CRUMB()
-PUBLIC PUT_COOKIE_IN_JAR(), GET_COOKIE_FROM_JAR(), COOKIES_IN_JAR()
-PUBLIC CRUMBS_IN_COOKIE(), COOKIE_EXPIRY(), COOKIE_STRING()
-PuBLIC COOKIE_FIX_NAME()
         DEFINE('NEW_COOKIE_JAR()')
         DEFINE('NEW_COOKIE(VALUE)')
         DEFINE('COOKIE_SET_VALUE(COOKIE,VALUE)')
         DEFINE('COOKIE_VALUE(COOKIE)')
         DEFINE('COOKIE_SET_CRUMB(COOKIE,CRUMB_NAME,VALUE)')
         DEFINE('COOKIE_GET_CRUMB(COOKIE,CRUMB_NAME)')
         DEFINE('PUT_COOKIE_IN_JAR(COOKIE_JAR,COOKIE_NAME,COOKIE)')
         DEFINE('GET_COOKIE_FROM_JAR(COOKIE_JAR,COOKIE_NAME)')
         DEFINE('COOKIES_IN_JAR(COOKIE_JAR)')
         DEFINE('CRUMBS_IN_COOKIE(COOKIE)')
         DEFINE('COOKIE_EXPIRY(N)T,D,M,S')
         DEXP('L20_(S) = LPAD(S, 2, "0")')
         DEFINE('COOKIE_STRING(COOKIE_JAR)A,B,C,I,J,S,V')
         DEFINE('COOKIE_FIX_NAME(S)')
                                                           :(COOKIE_END)
*
* RETURN COOKIE STRING 
*
COOKIE_STRING
         A = COOKIES_IN_JAR(COOKIE_JAR)                       :F(RETURN)
COOKIE_STRING_2
         I = I + 1
         C = GET_COOKIE_FROM_JAR(COOKIE_JAR, A<I>)   :F(COOKIE_STRING_5)
         B = CRUMBS_IN_COOKIE(C)                     :F(COOKIE_STRING_2)
         S = S 'Set-Cookie: ' A<I> '=' COOKIE_VALUE(C)
         J = 1
COOKIE_STRING_3
         J = J + 1
         V = COOKIE_GET_CRUMB(C, B<J>)               :F(COOKIE_STRING_4)
         S = S '; ' B<J>
         S = S '=' VDIFFER(V)                         :(COOKIE_STRING_3)
COOKIE_STRING_4
         S = S CHARS_CR CHARS_NL                      :(COOKIE_STRING_2)
COOKIE_STRING_5
         COOKIE_STRING = S                                     :(RETURN)
*
* RETURN EXPIRES STRING FOR N SECONDS IN THE FUTURE. THIS STRING IS
* IN THE FORMAT:
* Wed, 09 Jun 2021 10:18:14 GMT
* ALL COOKIE EXPIRY IS IN GMT.
*
COOKIE_EXPIRY
         T = TV_SEC(GETTIMEOFDAY()) + N
         T = GMTIME(T)
         '0Sun1Mon2Tue3Wed4Thu5Fri6Sat' TM_WDAY(T) LEN(3) . D
         '0Jan1Feb2Mar3Apr4May5Jun6Jul7Aug8Sep9Oct10Nov11Dec'
+           TM_MON(T) LEN(3) . M
         S = D ', ' L20_(TM_MDAY(T)) ' ' M ' ' (TM_YEAR(T) + 1900)
+        ' ' L20_(TM_HOUR(T)) ':' L20_(TM_MIN(T)) ':' L20_(TM_SEC(T))
+        ' GMT'
         COOKIE_EXPIRY = S                                     :(RETURN)
*
* MAKE A NEW COOKIE JAR
*
NEW_COOKIE_JAR
         NEW_COOKIE_JAR = TABLE()                              :(RETURN)
*
* MAKE A NEW COOKIE
*
NEW_COOKIE
         NEW_COOKIE = TABLE()
         NEW_COOKIE<''> = VDIFFER(VALUE)                       :(RETURN)
*
* SET THE VALUE OF THE COOKIE (ATRIBUTE '')
*
COOKIE_SET_VALUE
         COOKIE<''> = VALUE                                    :(RETURN)
*
* RETURN THE VALUE OF THE COOKIE (ATTRIBUTE '')
*
COOKIE_VALUE
         COOKIE_VALUE = COOKIE<''>                             :(RETURN)
*
COOKIE_FIX_NAME
         S = TRIMB(S)
         S POS(0) '$' REM . S
         COOKIE_FIX_NAME = S                                   :(RETURN)
*
* SET AN ATTRIBUTE ON THE COOKIE
*
COOKIE_SET_CRUMB
         CRUMB_NAME = COOKIE_FIX_NAME(CRUMB_NAME)
         COOKIE<CRUMB_NAME> = VALUE                            :(RETURN)
*
* GET VALUE OF AN ATTRIBUTE FROM THE COOKIE
*
COOKIE_GET_CRUMB
         CRUMB_NAME = COOKIE_FIX_NAME(CRUMB_NAME)
         COOKIE_GET_CRUMB = COOKIE<CRUMB_NAME>                 :(RETURN)
*
* PUT THE COOKIE INTO THE COOKIE JAR, WITH NAME COOKIE_NAME
*
PUT_COOKIE_IN_JAR
         COOKIE_NAME = COOKIE_FIX_NAME(COOKIE_NAME)
         COOKIE_JAR<COOKIE_NAME> = COOKIE                      :(RETURN)
*
* GET COOKIE NAMED COOKIE_NAME FROM THE COOKIE JAR
*
GET_COOKIE_FROM_JAR
         COOKIE_NAME = COOKIE_FIX_NAME(COOKIE_NAME)
         GET_COOKIE_FROM_JAR = COOKIE_JAR<COOKIE_NAME>         :(RETURN)
*
* RETURN ARRAY OF COOKIE NAMES IN THE COOKIE JAR, SORTED.
*
COOKIES_IN_JAR
         COOKIES_IN_JAR = KEYS_IN_TABLE(COOKIE_JAR)          :F(FRETURN)
         COOKIES_IN_JAR = SORT(COOKIES_IN_JAR)                 :(RETURN)
*
* RETURN ARRAY OF CRUMBS IN THE COOKIE, SORTED. THE FIRST CRUMB WILL
* BE THE UNAMED VALUE OF THE COOKIE.
*
CRUMBS_IN_COOKIE
         CRUMBS_IN_COOKIE = KEYS_IN_TABLE(COOKIE)            :F(FRETURN)
         CRUMBS_IN_COOKIE = SORT(CRUMBS_IN_COOKIE)             :(RETURN)
*
COOKIE_END
*
@

<<unit_test>>=
#!/usr/bin/bash
         exec "/usr/local/bin/snobol4" "-b" "$0" "$@"
-INCLUDE 'COOKIE.INC'
*
         &CODE = 1
         JAR = NEW_COOKIE_JAR()
         COOKIE1 = NEW_COOKIE()
         PUT_COOKIE_IN_JAR(JAR, 'COOKIE-1', COOKIE1)
         COOKIE_SET_VALUE(COOKIE1, 'VALUE-1')
         COOKIE2 = NEW_COOKIE('VALUE-2')
         PUT_COOKIE_IN_JAR(JAR, 'COOKIE-2', COOKIE2)
         A = COOKIES_IN_JAR(JAR)                                 :F(END)
         IDENT(A<1>, 'COOKIE-1')                                 :F(END)
         IDENT(A<2>, 'COOKIE-2')                                 :F(END)
         COOKIE = GET_COOKIE_FROM_JAR(JAR, 'COOKIE-1')
         IDENT(COOKIE, COOKIE1)                                  :F(END)
         COOKIE_SET_CRUMB(COOKIE, 'Expires', COOKIE_EXPIRY(60 * 60))
* UNFORTUNATELY, THIS RESULT IS REALLY THE ONLY ONE THAT MATTERS, AND
* IT HAS TO BE VISUALLY INSPECTED -- I WILL FIX THIS LATER.
         OUTPUT = COOKIE_STRING(JAR)
         &CODE = 0
END
@

<<>>=
<<INCLUDES>>
-STITL COOKIE
-EJECT
*
************************************************************************
*                                                                      *
*            #####   #######  #######  #    #  ###  #######            *
*           #     #  #     #  #     #  #   #    #   #                  *
*           #        #     #  #     #  #  #     #   #                  *
*           #        #     #  #     #  ###      #   #####              *
*           #        #     #  #     #  #  #     #   #                  *
*           #     #  #     #  #     #  #   #    #   #                  *
*            #####   #######  #######  #    #  ###  #######            *
*                                                                      *
* COOKIE                    HANDLE COOKIES                             *
*                                                                      *
************************************************************************
*
* COOKIE.lss
*
<<COOKIE>>
*
* CE: .F.MSNOBOL4;
@
