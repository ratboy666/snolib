<h1>CSNOBOL4 - Functions specific to CSNOBOL4</h1>

These are functions specific to [[CSNOBOL4]].

We use FFI to access io_getfp() to retrieve the FILE * for a unit.
This allows proper implementation of pipe i/o where CSNOBOL4 1.5
has problems.

Should pull SPRINTF() into UNIX.

<h2>Uses</h2>
<a href="FFI.html">FFI</a><br>

<<INCLUDES>>=
-INCLUDE 'FFI.INC'
@

[[SPRINTF(F,V)]] formats an [[INTEGER]] or [[REAL]] value [[V]] using
the [[C]] format [[F]] and returns the result as a string. For example:

[[
    SPRINTF("%d", I)
    SPRINTF("%g", X)
]]

<<CSNOBOL4>>=
-PUBLIC SPRINTF()
*
         LOAD('SPRINTF(STRING,)STRING')
@

We want to retrieve the FILE * for a unit. This can be used to perform
other forms of i/o, or to retrieve the underlying file descriptor.
Use FFI to access [[io_getfp()]]. There may be a bug in CSNOBOL4
1.5. When doing I/O using [[fgets()]] (normal line oriented) to a
bi-direction pipe, we get errno 29 (ESPIPE) errors, indicating that
seek on the pipe failed. Of course, we can't seek on the pipe; this
is done solely to separate read and write. But, there may be a timing
issue because there are two separate processes involved.

<<CSNOBOL4>>=
*
-PUBLIC IO_GETFP()
*
         IO_GETFP_FFI = FFI_NEW('P', 'I')
         FFI_SET_CALLP(IO_GETFP_FFI, DLSYM(0, 'io_getfp'))
         DEFINE('IO_GETFP(UNIT)')                        :(CSNOBOL4_END)
*
IO_GETFP FFI_PAR_N_INTEGER(IO_GETFP_FFI, 1, UNIT)
         IO_GETFP = FFI_CALL_PTR(IO_GETFP_FFI)                 :(RETURN)
*
CSNOBOL4_END
@

Open /dev/stdout (fd 1) as unit 10. Write to new I/O variable.
Obtain the FILE * (file pointer) for unit 10. Obtain the underlying
FD for the file pointer. Display both file pointer and file number,
and confirm that FD is 1.

<<unit_test>>=
#!/usr/bin/bash
         exec "snobol4" "-b" "$0" "$@"
-INCLUDE 'CSNOBOL4.INC'
-INCLUDE 'UNIX.INC'
         &CODE = 1
         OUTPUT(.T_OUT, 10,, '/dev/stdout')
         T_OUT = 'HELLO, WORLD'
         FP = IO_GETFP(10)
         FD = FILENO(FP)
         OUTPUT = 'FILE * = ' FP
         OUTPUT = 'FD     = ' FD
         EQ(FD, 1)                                               :F(END)
         &CODE = 0
END
@

<<>>=
-MODULE CSNOBOL4
<<INCLUDES>>
-IN72
-STITL CSNOBOL4
-EJECT
*
************************************************************************
*                                                                      *
*  #####    #####   #     #  #######  ######   #######  #        #   # *
* #     #  #     #  ##    #  #     #  #     #  #     #  #        #   # *
* #        #        # #   #  #     #  #     #  #     #  #        #   # *
* #         #####   #  #  #  #     #  ######   #     #  #        ##### *
* #              #  #   # #  #     #  #     #  #     #  #            # *
* #     #  #     #  #    ##  #     #  #     #  #     #  #            # *
*  #####    #####   #     #  #######  ######   #######  #######      # *
*                                                                      *
* CSNOBOL4         FUNCTIONS SPECIFIC TO CSNOBOL4                      *
*                                                                      *
************************************************************************
*
* CSNOBOL4.lss
*
<<CSNOBOL4>>
*
* CE: .MSNOBOL4;
@
