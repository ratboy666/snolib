; c2.mac
;
; CE: .M.ASM;
; CE: 0.T 10.H 24.H 42.H;
;
; PART 2 OF THE COMMON ILLUSTRATION. LINK TO THE INITIALIZED COMMON
; BLOCKS NAMED STRINGS. DEFINE HELLO AS THE STRING AT OFFSET 8.
; LINK TO UNNAMED COMMON. COMMON SIZE IS NOT RETAINED BY 'RUN' AND
; ASM. IT COULD BE CHECKED, BUT THERE ISN'T REALLY MUCH POINT. FOR
; MORE SOPHISTICATION, MEMORY COULD BE CONTROLLED BY ANOTHER MODULE,
; BUT THIS ALLOWS DIRECT CODE GENERATION AND SHARING OF BSS/DSS STORAGE
; WITHOUT CHANGING GENERATED OBJECT CODE.
;
; THERE IS THE ISSUE OF RECURSIVE ROUTINES. GENERALLY, WE WANT TO KEEP
; CODE GENERATION AS SIMPLE AS POSSIBLE. RETRIEVING PASSED PARAMETERS
; CAN BE TRICKY -- THAT OPERATIION USES LIGHTNING SPECIFIC OPERATIONS,
; WHICH CANNOT BE EASILY GENERALIZED INTO AN "ADDRESS MODE". THE EASY
; SOLUTION IS TO COPY ANY PARAMETERS INTO "LOCAL" VARIABLES. BUT, THIS
; PREVENTS RECURSION. TO ALLOW RECURSION, WE INTRODUCE PUSH AND POP
; OPERATIONS INTO THE 'RUN' COMPONENT. THE IDEA IS THAT THE CALLED
; FUNCTION CAN PUSH THE LOCAL VARIABLE, AND THEN RETRIEVE THE VALUE
; OF THE PARAMETER AND STORE IT INTO THE LOCAL VARIABLE. ON EXIT,
; THE FUNCTION CAN POP THE VARIABLES BACK, RESTORING THEM PRIOR TO
; RETURNING. YES, THIS MAKE FUNCTION ENTRY AND EXIT MORE COMPLEX, BUT
; ISOLATES THE CALLING CONVENTION. THIS IS IMPORTANT TO ALLOW THE
; ASM CODE TO RUN ON AS MANY PLATFORMS AS LIGHTNING SUPPORTS WITHOUT
; HAVING TO CHANGE MUCH "HIGHER LEVEL" CODE GENERATION. NOTE THAT
; LIGHTING ITSELF DOES NOT EXPOSE PUSH AND POP OR A STACK, BUT WE
; CAN (AND DO) MAKE THE STACK APPEAR AS ALMOST A MACHINE FEATURE.
;
; MULTIPLE STACKS ARE SUPPORTED, WITH AUTOMATIC GROWTH. STACKS ARE
; LIMITED TO 65,535 ENTRIES EACH OF WHICH CAN CONTAIN A DOUBLE OR
; POINTER AS NEEDED.
;
         NAME          'C2'
;
         USES          '%R0,%R1,%R2,%R3,%V0,%V1,%V2,%V3,%FP'
         USES          '%F0,%F1,%F2,%F3,%F4,%F5,%F6,%F7'
;
FPRINTF  EXTERN        'fprintf'
STDERR   EXTERN        'stderr'
;
STRINGS  COMMON        100
SAMPLE   DEFINE        STRINGS+0
HELLO    DEFINE        STRINGS+8
;
.COMMON. COMMON        32
;
         EXPORT        .MAIN.
.MAIN.   ADDRESS
         PROLOG
         NOTE          'C2', 1
         NOTE          'PUSH 5', 1
         MOVI          %R0, 5
         PUSH          SS.., %R0
         NOTE          'PRSTACK(SS)', 1
         PREPARE
           PUSHARGI    SS..
           FINISHI     PRSTACK..
         NOTE          'FPRINTF(STDERR, HELLO)', 1
         PREPARE
           LDI         %R0, STDERR
           PUSHARGR    %R0
           PUSHARGI    HELLO
           ELLIPSIS
           FINISHI     FPRINTF
         NOTE          'RETURN 0', 1
         RETI          0
         EPILOG
;
         END
